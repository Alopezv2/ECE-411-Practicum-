Skynet 2020 Project: Line-Tracking Robot Car

  Concept of Operations 
The purpose of this project is to design and prototype a line tracking car that will educate young children about sensor feedback and automation. The Minimum Viable Product (MVP), the robotic car will also be able to detect obstacles and maneuver around them. The car will have an on/off switch; when on, the car will start and the sensors will detect its environment and follow a line. The off switch will power off the car. Also, sensor feedback by lighting of LED’s when detecting objects. We believe that we can build a product that is easy to use and inexpensive to build.


Needs Statement
There is a need for STEM-related students, by introducing simple concepts at an early age, we may be able to interest them to pursue that field of study.


Objective
Our objective is to build an easy to understand and use product that is geared toward the development of young children. We want to inspire and motivate a new generation of STEM students and provide the ability to learn about basic electronic components, CPUs, and software.

Market Analysis
Intended customers:
Background, Car tracker robotic kits are sold in kits as an essential part of robotics education. They are usually part of Arduino learning. 
Our product is intended to be an educational tool that could be available in schools, after-school programs, summer camps, or simply at home. We want to focus on curious young students from ages 7-14. We would like to in the future expand our product line and develop a series of toys/educational products that could be attractive to children, teens, and young adults.

Competition:
Other products are offered in stores and online, most of the cars available are premade and already built and sometimes complex. We would like to design and build a car that is not just a toy but a car that can be used to educate and inspire children.   



Price Point:
We strive to keep a low price and provide a high-quality product. This will allow all children the ability to discover new ideas. Therefore, the product will range from $40-$70.

Requirements:
Performance Requirements: 
●	The Tracking Car should have a battery life of 2 - 3 hours
●	The Tracking Car will be able to maneuver around an object on its track and return on the same trajectory 

Energy Requirements:
●	The Tracking Car should only accept rechargeable batteries

Maintainability Requirements:
●	The Tracking Car should be easy to replace wheels and any other items not included on the PCB board
●	The Tracking Car will require less than two tools to replace items

Operational Requirements:
●	The Tracking Car will be no longer than 12.7 cm, no wider than 6.35 cm, and a height shorter than 5 cm

Economic Requirements:
●	Shouldn't cost more than $60 to produce 
●	Any additional features should cost less than $5

Functionality Requirements:
●	The Tracking Car Should be compact
●	Should be following a line track
●	Should be able to detect and avoid obstacles using sensors
●	Have a minimum of 3 wheels 
●	Wheels should be able to maneuver the car forward, right, left, and reverse  
●	Have on/off switch
●	Use microcontroller to program algorithm
●	LEDs to show whenever the sensors sense an object. 


Marketing Requirements:
●	The car must have a low cost no more than $50
●	The car can be used by one user
●	Car will be easy to use


System Architecture

feed back from sensors (IR and ultrasonic) to motor controller 
and from motor controller to servo motors
 

Design Specification
●	No Arduino needed
●	Sensor: Ultrasonic sensor
●	DC Motor Driver interface
●	Sensor: (IR) emitter, receiver
●	Servo motors 
●	Processor: ATMega328p
●	 Actuator: On/Off switch button 
●	 Power: 5V on provided by batteries 
●	 Have ≥ 2 layers, with a solder mask and at least a top-side silkscreen.
●	 no longer than 12.7 cm, no wider than 6.35 cm, and a height shorter than 5 cm


Search:
https://www.arduino.cc/
https://www.sparkfun.com/
https://www.instructables.com/circuits/


Revision: 
Revision 1.0: Initial document.
Revision 1.1: Added sections.  
Revision 1.2: Added schematic 
Revision 1.3 corrected grammar 

